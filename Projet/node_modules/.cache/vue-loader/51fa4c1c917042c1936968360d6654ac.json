{"remainingRequest":"/Users/One/Desktop/Becode/todolist/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/One/Desktop/Becode/todolist/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/One/Desktop/Becode/todolist/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/One/Desktop/Becode/todolist/src/components/TodoList.vue?vue&type=template&id=3de47834&","dependencies":[{"path":"/Users/One/Desktop/Becode/todolist/src/components/TodoList.vue","mtime":1554129885000},{"path":"/Users/One/Desktop/Becode/todolist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/One/Desktop/Becode/todolist/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/One/Desktop/Becode/todolist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/One/Desktop/Becode/todolist/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/One/Desktop/Becode/todolist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/One/Desktop/Becode/todolist/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/One/Desktop/Becode/todolist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/One/Desktop/Becode/todolist/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"hello\" },\n    [\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.newTodo,\n            expression: \"newTodo\"\n          }\n        ],\n        staticClass: \"todo\",\n        attrs: { type: \"text\", placeholder: \"you have to do it\" },\n        domProps: { value: _vm.newTodo },\n        on: {\n          keyup: function($event) {\n            if (\n              !$event.type.indexOf(\"key\") &&\n              _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n            ) {\n              return null\n            }\n            return _vm.addTodo($event)\n          },\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.newTodo = $event.target.value\n          }\n        }\n      }),\n      _c(\"h1\", [_vm._v(_vm._s(_vm.msg))]),\n      _vm._l(_vm.todos, function(todo) {\n        return _c(\"div\", { key: todo.id, staticClass: \"todo-item\" }, [\n          _c(\"div\", { class: { completed: todo.completed } }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: todo.completed,\n                  expression: \"todo.completed\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(todo.completed)\n                  ? _vm._i(todo.completed, null) > -1\n                  : todo.completed\n              },\n              on: {\n                change: function($event) {\n                  var $$a = todo.completed,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 && _vm.$set(todo, \"completed\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          todo,\n                          \"completed\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(todo, \"completed\", $$c)\n                  }\n                }\n              }\n            }),\n            _vm._v(\"\\n            \" + _vm._s(todo.title) + \"\\n        \")\n          ])\n        ])\n      }),\n      _c(\"div\", { staticClass: \"all\" }, [\n        _c(\"input\", {\n          attrs: { type: \"submit\", value: \"Delete\" },\n          on: { click: _vm.removeTodo }\n        })\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}