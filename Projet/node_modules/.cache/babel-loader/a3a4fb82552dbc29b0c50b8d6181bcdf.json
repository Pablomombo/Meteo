{"remainingRequest":"/Users/One/Desktop/Becode/app-meteo/node_modules/babel-loader/lib/index.js!/Users/One/Desktop/Becode/app-meteo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/One/Desktop/Becode/app-meteo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/One/Desktop/Becode/app-meteo/src/components/TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/One/Desktop/Becode/app-meteo/src/components/TodoList.vue","mtime":1554300652000},{"path":"/Users/One/Desktop/Becode/app-meteo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/One/Desktop/Becode/app-meteo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/One/Desktop/Becode/app-meteo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/One/Desktop/Becode/app-meteo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Weather',\n  data: function data() {\n    return {\n      city: '',\n      currentTemp: '',\n      minTemp: '',\n      maxTemp: '',\n      sunrise: '',\n      sunset: '',\n      pressure: '',\n      humidity: '',\n      wind: '',\n      overcast: '',\n      icon: ''\n    };\n  },\n  methods: {\n    search: function search(city) {\n      var _this = this;\n\n      this.axios.get('http://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&APPID=828f254e4be90d645d3ec63d34255886').then(function (response) {\n        _this.currentTemp = response.data.main.temp;\n        _this.minTemp = response.data.main.temp_min;\n        _this.maxTemp = response.data.main.temp_max;\n        _this.pressure = response.data.main.pressure;\n        _this.humidity = response.data.main.humidity + '%';\n        _this.wind = response.data.wind.speed + 'm/s';\n        _this.overcast = response.data.weather[0].description;\n        _this.icon = \"images/\" + response.data.weather[0].icon.slice(0, 2) + \".svg\";\n        _this.sunrise = new Date(response.data.sys.sunrise * 1000).toLocaleTimeString(\"en-GB\").slice(0, 4);\n        _this.sunset = new Date(response.data.sys.sunset * 1000).toLocaleTimeString(\"en-GB\").slice(0, 4);\n      });\n    }\n  }\n};",{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA,EAJA;AAKA,MAAA,OAAA,EAAA,EALA;AAMA,MAAA,MAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,QAAA,EAAA,EARA;AASA,MAAA,IAAA,EAAA,EATA;AAUA,MAAA,QAAA,EAAA,EAVA;AAWA,MAAA,IAAA,EAAA;AAXA,KAAA;AAaA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,IADA,EACA;AAAA;;AACA,WAAA,KAAA,CACA,GADA,CACA,sDAAA,IAAA,GAAA,sDADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,QAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,QAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,QAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,QAAA,GAAA,GAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,EAAA,WAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,YAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,MAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,IAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,GAAA,IAAA,EAAA,kBAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,IAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA,MAAA,GAAA,IAAA,EAAA,kBAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,OAbA;AAcA;AAhBA;AAjBA,CAAA","sourcesContent":["<template>\n    <div id=\"weather\">\n        <input type=\"text\" class=\"weather\" placeholder=\"city\"\n        v-model=\"city\">\n        <button type=\"submit\" @click=\"search(city)\">Submit</button>\n        <h1>{{ city }}</h1>\n            <p>{{ currentTemp }}</p>\n        <p>{{ minTemp }} {{ maxTemp }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Weather',\n    data () {\n        return {\n            city: '',\n            currentTemp: '',\n            minTemp: '',\n            maxTemp:'',\n            sunrise: '',\n            sunset: '',\n            pressure: '',\n            humidity: '',\n            wind: '',\n            overcast: '',\n            icon: ''\n        }\n    },\n    methods: {     \n        search(city) {\n            this.axios\n                .get('http://api.openweathermap.org/data/2.5/weather?q=' +city+ '&units=metric&APPID=828f254e4be90d645d3ec63d34255886')\n                .then(response => {\n                    this.currentTemp = response.data.main.temp;\n                    this.minTemp = response.data.main.temp_min;\n                    this.maxTemp = response.data.main.temp_max;\n                    this.pressure = response.data.main.pressure;\n                    this.humidity = response.data.main.humidity + '%';\n                    this.wind = response.data.wind.speed + 'm/s';\n                    this.overcast = response.data.weather[0].description;\n                    this.icon = \"images/\" + response.data.weather[0].icon.slice(0, 2) + \".svg\";\n                    this.sunrise = new Date(response.data.sys.sunrise*1000).toLocaleTimeString(\"en-GB\").slice(0,4);\n                    this.sunset = new Date(response.data.sys.sunset*1000).toLocaleTimeString(\"en-GB\").slice(0,4);\n                })\n        }\n    }\n}\n</script>\n\n<style>\n.todo {\n    /*width: 100%;\n    padding: 10px 18px;*/\n    font-size: 18px;\n    margin-bottom: 16px;\n}\n/*h1 {\n    text-align: center;\n}\n.todo-item {\n    font-size: 22px;\n}\n.remove {\n    cursor: pointer;\n    margin-left: 14px;\n}\n.completed {\n    text-decoration: line-through;\n    color: black;\n}\n.all {\n    padding-top: 10px;\n    border-top: 1px solid grey;\n}*/\n</style>"],"sourceRoot":"src/components"}]}