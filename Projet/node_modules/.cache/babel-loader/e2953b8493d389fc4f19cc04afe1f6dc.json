{"remainingRequest":"/Users/One/Desktop/Becode/Meteo_bis/Projet/node_modules/babel-loader/lib/index.js!/Users/One/Desktop/Becode/Meteo_bis/Projet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/One/Desktop/Becode/Meteo_bis/Projet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/One/Desktop/Becode/Meteo_bis/Projet/src/components/Weather.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/One/Desktop/Becode/Meteo_bis/Projet/src/components/Weather.vue","mtime":1555684346000},{"path":"/Users/One/Desktop/Becode/Meteo_bis/Projet/node_modules/cache-loader/dist/cjs.js","mtime":1555676212000},{"path":"/Users/One/Desktop/Becode/Meteo_bis/Projet/node_modules/babel-loader/lib/index.js","mtime":1555676212000},{"path":"/Users/One/Desktop/Becode/Meteo_bis/Projet/node_modules/cache-loader/dist/cjs.js","mtime":1555676212000},{"path":"/Users/One/Desktop/Becode/Meteo_bis/Projet/node_modules/vue-loader/lib/index.js","mtime":1555676223000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nimport 'moment-timezone';\nexport default {\n  name: 'Weather',\n  data: function data() {\n    return {\n      city: '',\n      date: '',\n      todayDate: '',\n      listForecast: ''\n    };\n  },\n  methods: {\n    getWeekDay: function getWeekDay(date) {\n      //Create an array containing each day, starting with Sunday.\n      var weekdays = new Array(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"); //Use the getDay() method to get the day.\n\n      var day = date.getDay(); //Return the element that corresponds to that index.\n\n      return weekdays[day];\n    },\n    search: function search(city) {\n      var _this = this;\n\n      var url = 'https://api.openweathermap.org/data/2.5/forecast?';\n      url += 'APPID=3822751709a7f52738e88ffcd846f0a0';\n      url += '&q=' + city;\n      url += '&units=metric';\n      this.axios.get(url).then(function (response) {\n        console.log(response);\n        _this.todayDate = moment().format('llll');\n        _this.date = '';\n\n        for (var i = 1; i < 6; i++) {\n          _this.date = moment().add(i, 'days').format('dddd');\n          console.log(_this.date);\n        }\n\n        _this.listForecast = response.data.list;\n      });\n    }\n  }\n};",{"version":3,"sources":["Weather.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AACA;AACA,UAAA,QAAA,GAAA,IAAA,KAAA,CACA,QADA,EACA,QADA,EACA,SADA,EACA,WADA,EACA,UADA,EACA,QADA,EACA,UADA,CAAA,CAFA,CAIA;;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CALA,CAMA;;AACA,aAAA,QAAA,CAAA,GAAA,CAAA;AACA,KATA;AAUA,IAAA,MAVA,kBAUA,IAVA,EAUA;AAAA;;AACA,UAAA,GAAA,GAAA,mDAAA;AACA,MAAA,GAAA,IAAA,wCAAA;AACA,MAAA,GAAA,IAAA,QAAA,IAAA;AACA,MAAA,GAAA,IAAA,eAAA;AACA,WAAA,KAAA,CACA,GADA,CACA,GADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,EAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,KAAA,CAAA,IAAA,GAAA,MAAA,GAAA,GAAA,CAAA,CAAA,EAAA,MAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA;AACA;;AACA,QAAA,KAAA,CAAA,YAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAXA;AAYA;AA3BA;AAVA,CAAA","sourcesContent":["<template>\n    <div id=\"weather\">\n        <div class=\"row\" style=\"background-color: white;\">\n            <div class=\"col-md-6\">\n                <h2>Prévision de la météo</h2>\n            </div>\n            <div class=\"col-md-6\" style=\"text-align: right; padding-top: 8px;\">\n                <input type=\"text\" class=\"weather\" placeholder=\"look for a city\" v-model=\"city\"  @keyup.enter=\"search(city)\">\n                <button type=\"submit\" @click=\"search(city)\">Submit</button>\n            </div>\n        </div>\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"row\">\n                        <div class=\"offset-1 col-md-10 mb-4\">\n                            <div class=\"today\" style=\"text-align: center;\">\n                                <div v-for=\"(y, index) in listForecast\" v-if=\"index %40===0\" :key=\"y.id\">\n                                    <div><img v-bind:src= \"'http://openweathermap.org/img/w/' + y.weather[0].icon + '.png'\" style=\"width:200px;height:200px;\"></div>\n                                    <div>\n                                        <p>Temp now: <span>{{ y.main.temp }}</span></p>\n                                        <p>{{ y.weather[0].description }}</p>\n                                        <h1>{{ city }}</h1>\n                                        <p><span>{{ todayDate }}</span></p>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <p>Pressure: <span>{{ y.main.pressure }}</span></p>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <p>Humidity: <span>{{ y.main.humidity + '%' }}</span></p>\n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-md-6\">\n                                                <p>Wind Speed: <span>{{ y.wind.speed + 'm/s' }}</span></p>\n                                            </div>\n                                            <div class=\"col-md-6\">\n                                                <p>Sea Level: <span>{{ y.main.sea_level }}</span></p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-1 col-md-1 mr-3\" v-for=\"(p, index) in listForecast\" v-if=\"index <8\" :key=\"p.id\">\n                            <div class=\"day\" style=\"text-align: center;\">\n                                <div>{{ p.dt_txt.slice(-8, -3) }}</div>\n                                <div><img v-bind:src= \"'http://openweathermap.org/img/w/' + p.weather[0].icon + '.png'\"></div>\n                                <div>\n                                    <p>max: <span>{{ p.main.temp_max }}</span></p>\n                                    <p>min: <span>{{ p.main.temp_min }}</span></p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                           \n                <div class=\"col-md-6\">\n                    <div class=\"cont\">    \n                        <div class=\"row\">\n                            <div class=\"offset-1 col-md-10\">\n                                <div v-for=\"(x, index) in listForecast\" v-if=\"index %8===0\" :key=\"x.id\">\n                                    <div class=\"week\" style=\"text-align: center;\">\n                                        <div class=\"row\">\n                                            <div class=\"col-5\">\n                                                <h4>{{ date }}</h4>\n                                            </div>    \n                                            <div class=\"col-3\">\n                                                <img v-bind:src= \"'http://openweathermap.org/img/w/' + x.weather[0].icon + '.png'\">\n                                            </div>\n                                            <div class=\"col-4\">\n                                            <p>max: <span>{{ x.main.temp_max }}</span></p>\n                                            <p>min: <span>{{ x.main.temp_min }}</span></p>   \n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport 'moment-timezone'\n\nexport default {\n    name: 'Weather',\n    data () {\n        return {\n            city: '',\n            date: '',\n            todayDate: '',\n            listForecast: ''\n        }\n    },\n    methods: {\n        getWeekDay(date) {\n            //Create an array containing each day, starting with Sunday.\n            var weekdays = new Array(\n            \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\")\n            //Use the getDay() method to get the day.\n            var day = date.getDay();\n            //Return the element that corresponds to that index.\n            return weekdays[day];\n        },\n        search(city) {\n            let url = 'https://api.openweathermap.org/data/2.5/forecast?';\n                url += 'APPID=3822751709a7f52738e88ffcd846f0a0';\n                url += '&q=' + city; \n                url += '&units=metric';\n          this.axios\n                .get(url)\n                .then(response => {\n                    console.log(response);\n                    this.todayDate = moment().format('llll');\n                    this.date = '';\n                    for (var i = 1; i < 6; i++) {\n                        this.date = moment().add(i, 'days').format('dddd');\n                        console.log(this.date);\n                    }\n                    this.listForecast = response.data.list;\n                })\n        },\n    }\n}\n</script>\n\n<style>\n#weather {\n    width: 100%;\n    height: auto;\n}\nbody {\n    background-color: cadetblue;\n}\n.cont {\n    margin-top: 60px;\n}\nspan {\n    font-weight: bold;\n}\n.week {\n    margin-bottom: 40px;\n}\n.wrapper{\n    width: 500px;\n}\n.first{\n    width: 250px;\n}\n.second{\n    width:250px;\n}\n</style>"],"sourceRoot":"src/components"}]}